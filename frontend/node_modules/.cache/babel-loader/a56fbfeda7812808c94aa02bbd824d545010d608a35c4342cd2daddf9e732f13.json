{"ast":null,"code":"import{useState,useEffect,useCallback}from'react';export const useRealtimeUpdates=function(initialData,fetchFunction){let interval=arguments.length>2&&arguments[2]!==undefined?arguments[2]:30000;const[data,setData]=useState(initialData);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const fetchData=useCallback(async()=>{try{setLoading(true);setError(null);const result=await fetchFunction();setData(result);}catch(err){console.error('Error fetching data:',err);setError(err.message||'Failed to fetch data');}finally{setLoading(false);}},[fetchFunction]);useEffect(()=>{fetchData();// Set up interval for real-time updates\nconst intervalId=setInterval(fetchData,interval);// Cleanup interval on unmount\nreturn()=>clearInterval(intervalId);},[fetchData,interval]);return{data,loading,error,refetch:fetchData};};","map":{"version":3,"names":["useState","useEffect","useCallback","useRealtimeUpdates","initialData","fetchFunction","interval","arguments","length","undefined","data","setData","loading","setLoading","error","setError","fetchData","result","err","console","message","intervalId","setInterval","clearInterval","refetch"],"sources":["C:/Users/RC_Student_lab/Desktop/goon/frontend/src/hooks/useRealtimeUpdates.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const useRealtimeUpdates = (initialData, fetchFunction, interval = 30000) => {\r\n  const [data, setData] = useState(initialData);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const result = await fetchFunction();\r\n      setData(result);\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      setError(err.message || 'Failed to fetch data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [fetchFunction]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n\r\n    // Set up interval for real-time updates\r\n    const intervalId = setInterval(fetchData, interval);\r\n\r\n    // Cleanup interval on unmount\r\n    return () => clearInterval(intervalId);\r\n  }, [fetchData, interval]);\r\n\r\n  return {\r\n    data,\r\n    loading,\r\n    error,\r\n    refetch: fetchData\r\n  };\r\n}; "],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CAExD,MAAO,MAAM,CAAAC,kBAAkB,CAAG,QAAAA,CAACC,WAAW,CAAEC,aAAa,CAAuB,IAArB,CAAAC,QAAQ,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,KAAK,CAC7E,KAAM,CAACG,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAACI,WAAW,CAAC,CAC7C,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACc,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAgB,SAAS,CAAGd,WAAW,CAAC,SAAY,CACxC,GAAI,CACFW,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CACd,KAAM,CAAAE,MAAM,CAAG,KAAM,CAAAZ,aAAa,CAAC,CAAC,CACpCM,OAAO,CAACM,MAAM,CAAC,CACjB,CAAE,MAAOC,GAAG,CAAE,CACZC,OAAO,CAACL,KAAK,CAAC,sBAAsB,CAAEI,GAAG,CAAC,CAC1CH,QAAQ,CAACG,GAAG,CAACE,OAAO,EAAI,sBAAsB,CAAC,CACjD,CAAC,OAAS,CACRP,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAAE,CAACR,aAAa,CAAC,CAAC,CAEnBJ,SAAS,CAAC,IAAM,CACde,SAAS,CAAC,CAAC,CAEX;AACA,KAAM,CAAAK,UAAU,CAAGC,WAAW,CAACN,SAAS,CAAEV,QAAQ,CAAC,CAEnD;AACA,MAAO,IAAMiB,aAAa,CAACF,UAAU,CAAC,CACxC,CAAC,CAAE,CAACL,SAAS,CAAEV,QAAQ,CAAC,CAAC,CAEzB,MAAO,CACLI,IAAI,CACJE,OAAO,CACPE,KAAK,CACLU,OAAO,CAAER,SACX,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}